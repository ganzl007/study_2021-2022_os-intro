# ***РОССИЙСКИЙ УНИВЕРСИТЕТ ДРУЖБЫ НАРОДОВ***

**Факультет физико-математических и естественных наук
Кафедра прикладной информатики и теории вероятностей**


**ОТЧЕТ по лабораторной работе №  14**

**дисциплина:Операционные системы**          


- **Студент: Гань Чжаолун**                                    

- **Группа:НФИБД-01-21** 
 
- **№ ст. билета: 1032198038**                                     



**МОСКВА
2022 г.**

# ***Цель работы:***

#### Приобретение практических навыков работы с именованными каналами.
# ***Выполнение работы:***
##### Сначала я создаю 5 файлов, показанных на рисунке, и редактирую их
![](https://i.ibb.co/k2vW7KL/Microsoft-Teams-image.png)
![](https://i.ibb.co/Nr1ksQ6/Microsoft-Teams-image-1.png)
![](https://i.ibb.co/VMtYFFL/Microsoft-Teams-image-2.png)
![](https://i.ibb.co/zNBTJzK/Microsoft-Teams-image-3.png)
![](https://i.ibb.co/fXtj4yv/Microsoft-Teams-image-4.png)
![](https://i.ibb.co/fDVJjhr/Microsoft-Teams-image-5.png)

#### Затем я использовал команду make для создания файла выполнения
![](https://i.ibb.co/kKsBmCB/Microsoft-Teams-image-6.png)

#### Наконец, я запустил сервер и клиент, показав, что ссылка прошла успешно, и сервер автоматически закрылся через 30 секунд.
![](https://i.ibb.co/F55qXSS/Microsoft-Teams-image-7.png)

# Контрольные вопросы：
1. В чем ключевое отличие именованных каналов от неименованных?
    - Именованные каналы, в отличие от неименованных, могут использоваться неродственными процессами. Они дают вам, по сути, те же возможности, что и неименованные каналы, но с некоторыми преимуществами, присущими обычным файлам. Именованные каналы используют специальную запись в директории для управления правами доступа.
2. Возможно ли создание неименованного канала из командной строки?
    - можно
3. Возможно ли создание именованного канала из командной строки?
    - можно
4. Опишите функцию языка С, создающую неименованный канал.
    - mknod
5. Опишите функцию языка С, создающую именованный канал.
    - mkfifo
6. Что будет в случае прочтения из fifo меньшего числа байтов, чем находится в канале? Большего числа байтов?
    - 1. При чтении меньшего числа байтов, чем находится в канале или FIFO, возвращается требуемое число байтов, остаток сохраняется для последующих чтений.
    - 2. При чтении большего числа байтов, чем находится в канале или FIFO, возвращается доступное число байтов. Процесс, читающий из канала, должен соответствующим образом обработать ситуацию, когда прочитано меньше, чем заказано.
7. Аналогично, что будет в случае записи в fifo меньшего числа байтов, чем позволяет буфер? Большего числа байтов?
    - 1. Запись числа байтов, меньшего емкости канала или FIFO, гарантированно атомарно. Это означает, что в случае, когда несколько процессов одновременно записывают в канал, порции данных от этих процессов не перемешиваются.
    - 2. При записи большего числа байтов, чем это позволяет канал или FIFO, вызов write(2) блокируется до освобождения требуемого места. При этом атомарность операции не гарантируется. Если процесс пытается записать данные в канал, не открытый ни одним процессом на чтение, процессу генерируется сигнал SIGPIPE, а вызов write(2) возвращает 0 с установкой ошибки (errno=ERRPIPE) (если процесс не установил обработки сигнала SIGPIPE, производится обработка по умолчанию — процесс завершается).

8. Могут ли два и более процессов читать или записывать в канал?
    - можно
9. Опишите функцию write (тип возвращаемого значения, аргументы и логику работы). Что означает    1 (единица) в вызове этой функции в программе server.c (строка 42)?
    - Отправить сообщение на сервер
10.Опишите функцию strerror.
    - Строковая функция strerror - функция языков C/C++, транслирующая код ошибки, который обычно хранится в глобальной переменной errno, в сообщение об ошибке, понятном человеку.
# Вывод: 
- Я научился практическим навыкам работы с назначенными каналами.